// Copyright (C) 2019-2025  CEA, EDF, OPEN CASCADE
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
//
// See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com
//
// Author : Anthony GEAY (EDF R&D)

#ifndef __SALOME_EXTERNALSERVERLAUNCHER_IDL__
#define __SALOME_EXTERNALSERVERLAUNCHER_IDL__

#include "SALOME_Exception.idl"
#include "SALOME_CommonTypes.idl"

module SALOME_CMOD
{
  typedef sequence<string> CmdList;

  interface ExternalServerHandler
  {
    long getPID();
    string getName();
    void killMe();
    void ping();
    void shutdown();
    LongVec listOfChildrenPID();
  };
  
  interface ExternalServerLauncher
  {
    ExternalServerHandler launchServer( in string server_name, in string working_dir, in CmdList command_list ) raises(SALOME_CMOD::SALOME_Exception);
    void cleanServersInNS();
    StringVec listServersInNS();
    ExternalServerHandler retrieveServerRefGivenNSEntry( in string ns_entry ) raises(SALOME_CMOD::SALOME_Exception);
    void registerToKill(in string server_name, in long PID) raises (SALOME_CMOD::SALOME_Exception);
    void shutdownServers() raises (SALOME_CMOD::SALOME_Exception);
    string gethostname();
    ByteVec fetchContentOfFileAndRm(in string file_name) raises (SALOME_CMOD::SALOME_Exception);
  };
};

#endif
